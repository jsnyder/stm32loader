[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "stm32loader"
authors = [
    {name = "jsnyder"},
    {name = "Floris Lambrechts", email = "florisla@gmail.com"},
]
readme = "README.md"
description = "Flash firmware to STM32 microcontrollers using Python."
license = {file = "LICENSE"}
requires-python = ">=3.9"
dependencies = [
    "pyserial",
    "progress",
]
classifiers = [
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Natural Language :: English",
    "Operating System :: OS Independent",
]
dynamic = ["version"]

[project.optional-dependencies]
hex = [
    "intelhex",
]
dev = [
    "wheel",
    "twine",
    "pylint",
    "flake8",
    "flake8-isort",
    "black",
    "bump-my-version",
    "nox",
    "cogapp",
]

[project.scripts]
stm32loader = "stm32loader.__main__:main"

[project.urls]
Home = "https://github.com/florisla/stm32loader"
BugTracker = "https://github.com/florisla/stm32loader/issues"
SourceCode = "https://github.com/florisla/stm32loader"


[tool.bumpversion]
current_version = "0.7.1-dev0"
commit = true
tag = true
message = "release: Bump version number from v{current_version} to v{new_version}"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(-(?P<release>[^\\d]+)(?P<devrelease>\\d+))?"
serialize = [
    "{major}.{minor}.{patch}-{release}{devrelease}",
    "{major}.{minor}.{patch}",
]

[tool.bumpversion.parts.release]
optional_value = "release"
values = [
    "dev",
    "release",
]

[[tool.bumpversion.files]]
filename = "stm32loader/__init__.py"
parse = "\\((?P<major>\\d+),\\s(?P<minor>\\d+),\\s(?P<patch>\\d+)(\\s*,\\s*\"(?P<release>[^\"]+)\"\\s*,\\s*(?P<devrelease>\\d+))?\\)"
serialize = [
    "({major}, {minor}, {patch}, \"{release}\", {devrelease})",
    "({major}, {minor}, {patch})",
]
search = "__version_info__ = {current_version}"
replace = "__version_info__ = {new_version}"


[tool.black]
line-length = 98
target-version = [
    "py39",
    "py310",
    "py311",
]
exclude = '''
/(
    \.git
  | \.idea
  | __pycache__
  | build
  | dist
  | .*\.egg-info
)/
'''


[tool.pytest.ini_options]
addopts = "--strict-markers -m 'not (hardware or hardware_missing)'"
markers = [
    "hardware",
    "missing_hardware",
]


[tool.isort]
line_length = 98
multi_line_output = 2
